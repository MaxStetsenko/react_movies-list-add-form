{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","errMessage","NewMovie","state","touched","validFieldLink","handleChange","event","target","name","value","setState","validateOnBlur","length","isValid","test","resetForm","this","addMovie","props","autoComplete","onSubmit","preventDefault","htmlFor","id","type","classNames","onChange","onBlur","required","disabled","Object","values","some","el","Component","App","moviesFromServer","console","log","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f740ae7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport { Component } from 'react';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ntype State = {\n  movie: Movie;\n  touched: {\n    title: boolean;\n    imgUrl: boolean;\n    imdbUrl: boolean;\n    imdbId: boolean;\n  }\n  validFieldLink: {\n    imgUrl: boolean;\n    imdbUrl: boolean;\n  }\n};\n\nconst errMessage = {\n  length: 'This field is required!',\n  link: 'URL - should be valid',\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    touched: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    validFieldLink: {\n      imgUrl: false,\n      imdbUrl: false,\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      movie: {\n        ...state.movie,\n        [name]: value,\n      },\n    }));\n  };\n\n  validateOnBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n    const regexpLink = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    switch (name) {\n      case 'title':\n      case 'imdbId':\n        this.setState(state => ({\n          touched: {\n            ...state.touched,\n            [name]: state.movie[name].length < 1,\n          },\n        }));\n        break;\n\n      case 'imdbUrl':\n      case 'imgUrl':\n        if (this.state.movie[name].length === 0) {\n          this.setState(state => ({\n            touched: {\n              ...state.touched,\n              [name]: state.movie[name].length < 1,\n            },\n          }));\n        } else {\n          const isValid = regexpLink.test(this.state.movie[name]);\n\n          this.setState(state => ({\n            touched: {\n              ...state.touched,\n              [name]: state.movie[name].length < 1,\n            },\n            validFieldLink: {\n              ...state.validFieldLink,\n              [name]: !isValid,\n            },\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  resetForm = () => {\n    this.setState({\n      movie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      touched: {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      },\n      validFieldLink: {\n        imgUrl: false,\n        imdbUrl: false,\n      },\n    });\n  };\n\n  render() {\n    const { movie, touched, validFieldLink } = this.state;\n    const { addMovie } = this.props;\n\n    return (\n      <>\n        <h2 className=\"title\">Add new movie</h2>\n        <form\n          autoComplete=\"off\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            addMovie({\n              ...movie,\n            });\n            this.resetForm();\n          }}\n        >\n          <label\n            htmlFor=\"formTitle\"\n            className=\"label\"\n          >\n            <span className=\"label__title\">Title:</span>\n            <input\n              id=\"formTitle\"\n              type=\"text\"\n              name=\"title\"\n              className={classNames('input', { 'input--error': touched.title })}\n              value={movie.title}\n              onChange={(event) => this.handleChange(event)}\n              onBlur={(event) => this.validateOnBlur(event)}\n              required\n            />\n            {touched.title && (\n              <p className=\"label__error\">{errMessage.length}</p>\n            )}\n          </label>\n\n          <label\n            htmlFor=\"formDescription\"\n            className=\"label\"\n          >\n            <span className=\"label__title\">Description:</span>\n            <textarea\n              id=\"formDescription\"\n              name=\"description\"\n              className=\"textarea\"\n              value={movie.description}\n              onChange={(event) => this.handleChange(event)}\n            />\n          </label>\n\n          <label\n            htmlFor=\"formImgUrl\"\n            className=\"label\"\n          >\n            <span className=\"label__title\">imgUrl:</span>\n            <input\n              id=\"formImgUrl\"\n              name=\"imgUrl\"\n              className={classNames('input', { 'input--error': touched.imgUrl || validFieldLink.imgUrl })}\n              value={movie.imgUrl}\n              onChange={(event) => this.handleChange(event)}\n              onBlur={(event) => this.validateOnBlur(event)}\n              required\n            />\n            {touched.imgUrl && (\n              <p className=\"label__error\">{errMessage.length}</p>\n            )}\n            {validFieldLink.imgUrl && (\n              <p className=\"label__error\">{errMessage.link}</p>\n            )}\n          </label>\n\n          <label\n            htmlFor=\"formImdbUrl\"\n            className=\"label\"\n          >\n            <span className=\"label__title\">imdbUrl:</span>\n            <input\n              id=\"formImdbUrl\"\n              name=\"imdbUrl\"\n              className={classNames('input', { 'input--error': touched.imdbUrl || validFieldLink.imdbUrl })}\n              value={movie.imdbUrl}\n              onChange={(event) => this.handleChange(event)}\n              onBlur={(event) => this.validateOnBlur(event)}\n              required\n            />\n            {touched.imdbUrl && (\n              <p className=\"label__error\">{errMessage.length}</p>\n            )}\n            {validFieldLink.imdbUrl && (\n              <p className=\"label__error\">{errMessage.link}</p>\n            )}\n          </label>\n\n          <label\n            htmlFor=\"formImdbId\"\n            className=\"label\"\n          >\n            <span className=\"label__title\">imdbUrl:</span>\n            <input\n              id=\"formImdbId\"\n              name=\"imdbId\"\n              className={classNames('input', { 'input--error': this.state.touched.imdbId })}\n              value={movie.imdbId}\n              onChange={(event) => this.handleChange(event)}\n              onBlur={(event) => this.validateOnBlur(event)}\n              required\n            />\n            {touched.imdbId && (\n              <p className=\"label__error\">{errMessage.length}</p>\n            )}\n          </label>\n\n          <button\n            type=\"submit\"\n            className=\"button\"\n            disabled={Object.values(this.state.touched).some(el => el === true)}\n          >\n            Add movie\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    // eslint-disable-next-line no-console\n    console.log(movie);\n\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}